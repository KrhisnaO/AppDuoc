{"ast":null,"code":"export class Usuario {\n  constructor(correo, password, nombre, apellido, pregunta, respuesta) {\n    this.correo = '';\n    this.password = '';\n    this.nombre = '';\n    this.apellido = '';\n    this.pregunta = '';\n    this.respuesta = '';\n    this.correo = correo, this.password = password, this.nombre = nombre, this.apellido = apellido, this.pregunta = pregunta, this.respuesta = respuesta;\n  }\n  listaUsuariosValidos() {\n    const lista = [];\n    lista.push(new Usuario('atorres@duocuc.cl', '1234', 'Ana', 'Torres', 'Nombre de su mascota', 'gato'));\n    lista.push(new Usuario('avalenzuela@duocuc.cl', 'qwer', 'Alberto', 'Valenzuela', 'Nombre de su mejor amigo', 'juanito'));\n    lista.push(new Usuario('cfuentes@duocuc.cl', 'asdf', 'Carla', 'Fuentes', 'Lugar de nacimiento de su madre', 'Valparaiso'));\n    return lista;\n  }\n  buscarUsuarioValido(correo, password) {\n    const nived = this.listaUsuariosValidos().find(usu => usu.correo === correo && usu.password === password);\n    return nived;\n  }\n  recuperarContra(correo) {\n    const contra = this.listaUsuariosValidos().find(usu => usu.correo === correo);\n    return contra;\n  }\n  MostrarContraseña(correo, respuesta) {\n    const nived = this.listaUsuariosValidos().find(usu => usu.correo === correo && usu.respuesta === respuesta);\n    return nived;\n  }\n  validarCorreo() {\n    if (this.correo.trim() === '') {\n      return 'Debe ingresar un nombre de usuario.';\n    }\n    if (this.correo.length <= 3) {\n      return 'El nombre de usuario debe tener más de 3 caracteres.';\n    }\n    return '';\n  }\n  validarPassword() {\n    if (this.password.trim() === '') {\n      return 'Para entrar al sistema debe ingresar la contraseña.';\n    }\n    if (this.password.length !== 4) {\n      return 'La contraseña debe ser numérica de 4 dígitos.';\n    }\n    return '';\n  }\n  validarUsuario() {\n    return this.validarCorreo() || this.validarPassword();\n  }\n  setUsuario(correo, password) {\n    this.correo = correo;\n    this.password = password;\n  }\n}","map":{"version":3,"names":["Usuario","constructor","correo","password","nombre","apellido","pregunta","respuesta","listaUsuariosValidos","lista","push","buscarUsuarioValido","nived","find","usu","recuperarContra","contra","MostrarContraseña","validarCorreo","trim","length","validarPassword","validarUsuario","setUsuario"],"sources":["/Users/krhisnaoyanedelyanez/Desktop/ProyectosIonic/AppDuoc/src/app/model/Usuario.ts"],"sourcesContent":["export class Usuario {\r\n  public correo = '';\r\n  public password = '';\r\n  public nombre ='';\r\n  public apellido ='';\r\n  public pregunta ='';\r\n  public respuesta ='';\r\n\r\n  constructor(\r\n    correo:string,\r\n    password:string,\r\n    nombre:string,\r\n    apellido:string,\r\n    pregunta:string,\r\n    respuesta:string)\r\n    { this.correo=correo,\r\n      this.password=password,\r\n      this.nombre=nombre,\r\n      this.apellido=apellido,\r\n      this.pregunta=pregunta,\r\n      this.respuesta=respuesta}\r\n\r\n    public listaUsuariosValidos(): Usuario[]{\r\n      const lista =[]\r\n      lista.push(new Usuario('atorres@duocuc.cl','1234','Ana', 'Torres','Nombre de su mascota','gato'))\r\n      lista.push(new Usuario('avalenzuela@duocuc.cl','qwer','Alberto','Valenzuela','Nombre de su mejor amigo','juanito'))\r\n      lista.push(new Usuario('cfuentes@duocuc.cl','asdf','Carla','Fuentes','Lugar de nacimiento de su madre','Valparaiso'))\r\n      return lista;\r\n    }\r\n\r\n    public buscarUsuarioValido(correo: string, password: string): Usuario | undefined {\r\n      const nived: Usuario | undefined = this.listaUsuariosValidos().find(\r\n        usu => usu.correo === correo && usu.password === password);\r\n      return nived;\r\n    }\r\n\r\n    public recuperarContra(correo:string): Usuario | undefined {\r\n      const contra: Usuario | undefined = this.listaUsuariosValidos().find(\r\n        usu => usu.correo===correo)\r\n        return contra;\r\n    }\r\n\r\n    public MostrarContraseña(correo: string, respuesta: string): Usuario | undefined {\r\n      const nived: Usuario | undefined = this.listaUsuariosValidos().find(\r\n        usu => usu.correo === correo && usu.respuesta === respuesta);\r\n      return nived;\r\n    }\r\n\r\n  public validarCorreo(): string {\r\n    if (this.correo.trim() === '') {\r\n      return 'Debe ingresar un nombre de usuario.';\r\n    }\r\n    if (this.correo.length <= 3 ) {\r\n      return 'El nombre de usuario debe tener más de 3 caracteres.';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  public validarPassword(): string {\r\n    if (this.password.trim() === '') {\r\n      return 'Para entrar al sistema debe ingresar la contraseña.';\r\n    }\r\n    if (this.password.length !== 4) {\r\n      return 'La contraseña debe ser numérica de 4 dígitos.';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  public validarUsuario(): string {\r\n    return this.validarCorreo()\r\n      || this.validarPassword();\r\n  }\r\n\r\n  \r\n\r\n  public setUsuario(correo: string, password: string): void {\r\n    this.correo = correo;\r\n    this.password = password;\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAM,MAAOA,OAAO;EAQlBC,YACEC,MAAa,EACbC,QAAe,EACfC,MAAa,EACbC,QAAe,EACfC,QAAe,EACfC,SAAgB;IAbX,KAAAL,MAAM,GAAG,EAAE;IACX,KAAAC,QAAQ,GAAG,EAAE;IACb,KAAAC,MAAM,GAAE,EAAE;IACV,KAAAC,QAAQ,GAAE,EAAE;IACZ,KAAAC,QAAQ,GAAE,EAAE;IACZ,KAAAC,SAAS,GAAE,EAAE;IAShB,IAAI,CAACL,MAAM,GAACA,MAAM,EAClB,IAAI,CAACC,QAAQ,GAACA,QAAQ,EACtB,IAAI,CAACC,MAAM,GAACA,MAAM,EAClB,IAAI,CAACC,QAAQ,GAACA,QAAQ,EACtB,IAAI,CAACC,QAAQ,GAACA,QAAQ,EACtB,IAAI,CAACC,SAAS,GAACA,SAAS;EAAA;EAEnBC,oBAAoBA,CAAA;IACzB,MAAMC,KAAK,GAAE,EAAE;IACfA,KAAK,CAACC,IAAI,CAAC,IAAIV,OAAO,CAAC,mBAAmB,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,EAAC,sBAAsB,EAAC,MAAM,CAAC,CAAC;IACjGS,KAAK,CAACC,IAAI,CAAC,IAAIV,OAAO,CAAC,uBAAuB,EAAC,MAAM,EAAC,SAAS,EAAC,YAAY,EAAC,0BAA0B,EAAC,SAAS,CAAC,CAAC;IACnHS,KAAK,CAACC,IAAI,CAAC,IAAIV,OAAO,CAAC,oBAAoB,EAAC,MAAM,EAAC,OAAO,EAAC,SAAS,EAAC,iCAAiC,EAAC,YAAY,CAAC,CAAC;IACrH,OAAOS,KAAK;EACd;EAEOE,mBAAmBA,CAACT,MAAc,EAAEC,QAAgB;IACzD,MAAMS,KAAK,GAAwB,IAAI,CAACJ,oBAAoB,EAAE,CAACK,IAAI,CACjEC,GAAG,IAAIA,GAAG,CAACZ,MAAM,KAAKA,MAAM,IAAIY,GAAG,CAACX,QAAQ,KAAKA,QAAQ,CAAC;IAC5D,OAAOS,KAAK;EACd;EAEOG,eAAeA,CAACb,MAAa;IAClC,MAAMc,MAAM,GAAwB,IAAI,CAACR,oBAAoB,EAAE,CAACK,IAAI,CAClEC,GAAG,IAAIA,GAAG,CAACZ,MAAM,KAAGA,MAAM,CAAC;IAC3B,OAAOc,MAAM;EACjB;EAEOC,iBAAiBA,CAACf,MAAc,EAAEK,SAAiB;IACxD,MAAMK,KAAK,GAAwB,IAAI,CAACJ,oBAAoB,EAAE,CAACK,IAAI,CACjEC,GAAG,IAAIA,GAAG,CAACZ,MAAM,KAAKA,MAAM,IAAIY,GAAG,CAACP,SAAS,KAAKA,SAAS,CAAC;IAC9D,OAAOK,KAAK;EACd;EAEKM,aAAaA,CAAA;IAClB,IAAI,IAAI,CAAChB,MAAM,CAACiB,IAAI,EAAE,KAAK,EAAE,EAAE;MAC7B,OAAO,qCAAqC;;IAE9C,IAAI,IAAI,CAACjB,MAAM,CAACkB,MAAM,IAAI,CAAC,EAAG;MAC5B,OAAO,sDAAsD;;IAG/D,OAAO,EAAE;EACX;EAEOC,eAAeA,CAAA;IACpB,IAAI,IAAI,CAAClB,QAAQ,CAACgB,IAAI,EAAE,KAAK,EAAE,EAAE;MAC/B,OAAO,qDAAqD;;IAE9D,IAAI,IAAI,CAAChB,QAAQ,CAACiB,MAAM,KAAK,CAAC,EAAE;MAC9B,OAAO,+CAA+C;;IAExD,OAAO,EAAE;EACX;EAEOE,cAAcA,CAAA;IACnB,OAAO,IAAI,CAACJ,aAAa,EAAE,IACtB,IAAI,CAACG,eAAe,EAAE;EAC7B;EAIOE,UAAUA,CAACrB,MAAc,EAAEC,QAAgB;IAChD,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}