{"ast":null,"code":"import _asyncToGenerator from \"/Users/krhisnaoyanedelyanez/Desktop/ProyectosIonic/AppDuoc/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { ElementRef } from '@angular/core';\nimport { Usuario } from 'src/app/model/Usuario';\nimport { Asistencia } from 'src/app/model/asistencia';\nimport jsQR from 'jsqr';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"titulo\"];\nconst _c1 = [\"video\"];\nconst _c2 = [\"canvas\"];\nfunction HomePage_p_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"Usuario: \", ctx_r0.usuario.nombre, \" \", ctx_r0.usuario.apellido, \"\");\n  }\n}\nfunction HomePage_ion_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 17);\n    i0.ɵɵlistener(\"click\", function HomePage_ion_button_16_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.comenzarEscaneoQR());\n    });\n    i0.ɵɵelement(1, \"ion-icon\", 18);\n    i0.ɵɵtext(2, \" Comenzar Escaneo de QR \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomePage_ion_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-button\", 17);\n    i0.ɵɵlistener(\"click\", function HomePage_ion_button_17_Template_ion_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.detenerEscaneoQR());\n    });\n    i0.ɵɵelement(1, \"ion-icon\", 19);\n    i0.ɵɵtext(2, \" Detener escaneo de QR \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomePage_h2_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.datosQR, \" \");\n  }\n}\nfunction HomePage_h2_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1, \" Sin informaci\\u00F3n \");\n    i0.ɵɵelementEnd();\n  }\n}\nclass HomePage {\n  constructor(activeroute // Permite obtener los parámetros de la página login\n  , router // Permite navegar entre páginas\n  , alertController // Permite mostrar mensajes emergentes más complejos que Toast\n  , animationController) {\n    this.activeroute = activeroute;\n    this.router = router;\n    this.alertController = alertController;\n    this.animationController = animationController;\n    this.asistencia = new Asistencia();\n    this.escaneando = false;\n    this.datosQR = '';\n    this.usuario = new Usuario('', '', '', '', '', '');\n    // Se llama a la ruta activa y se obtienen sus parámetros mediante una subscripcion\n    this.activeroute.queryParams.subscribe(params => {\n      const nav = this.router.getCurrentNavigation();\n      if (nav) {\n        // Si tiene datos extra, se rescatan y se asignan a una propiedad\n        if (nav.extras.state) {\n          this.usuario = nav.extras.state['usuario'];\n          return;\n        }\n      }\n      // Si no vienen datos extra desde la página anterior, quiere decir que el usuario\n      // intentó entrar directamente a la página home sin pasar por el login,\n      // de modo que el sistema debe enviarlo al login para que inicie sesión.\n      this.router.navigate(['/login']);\n    });\n  }\n  animateItem(elementRef) {\n    this.animationController.create().addElement(elementRef).iterations(1).duration(600).fromTo('transform', 'translate(100%)', 'translate(0%)').play();\n  }\n  ngOnInit() {}\n  ngAfterViewInit() {\n    if (this.itemTitulo) {\n      const animation = this.animationController.create().addElement(this.itemTitulo.nativeElement).iterations(1).duration(3000).fromTo('transform', 'translate(0%)', 'translate(45%)').fromTo('opacity', 0.2, 1);\n      animation.play();\n    }\n  }\n  // Se va a solicitar el uso de la cámara, por medio de \"navigator.mediaDevices.getUserMedia\".\n  // La cámara es necesaria para poder capturar el Código QR.\n  // Luego se cofigurará:\n  //     this.video.nativeElement.setAttribute('playsinline', 'true');\n  // que permite que el video se reproduzca dentro del contexto de la página, en lugar de\n  // cambiar automáticamente al modo de pantalla completa en dispositivos iOS. \n  // Esto sirve para proporcionar una experiencia de usuario más fluida y evitar \n  // interrupciones al reproducir videos en el sitio web. Luego se iniciará el proceso de\n  // escaneo indicándolo por medio de la variable \"this.escaneando = true;\" y se podrá detener \n  // el escaneo por medio del botón de \"Detener\" que cambia a \"this.escaneando = false;\" o bien\n  // si la cámara detecta un código QR.\n  comenzarEscaneoQR() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const mediaProvider = yield navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: 'environment'\n        }\n      });\n      _this.video.nativeElement.srcObject = mediaProvider;\n      _this.video.nativeElement.setAttribute('playsinline', 'true');\n      _this.video.nativeElement.play();\n      _this.escaneando = true;\n      requestAnimationFrame(_this.verificarVideo.bind(_this));\n    })();\n  }\n  // Las imágenes de la cámara se analizan muchas veces, hasta que logre encontrar un Código QR,\n  // por esta razón se usa la función del navegador \"requestAnimationFrame\", que permite realizar\n  // actualizaciones de la interfaz de usuario de manera eficiente y sincronizada con los \n  // refrescos de la pantalla. Entonces, en cada refresco de pantalla el programa realizará una\n  // pequeña pausa para analizar si el fotograma capturado es o no un Código QR, por medio de\n  // la función this.obtenerDatosQR().\n  verificarVideo() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (_this2.video.nativeElement.readyState === _this2.video.nativeElement.HAVE_ENOUGH_DATA) {\n        if (_this2.obtenerDatosQR() || !_this2.escaneando) return;\n        requestAnimationFrame(_this2.verificarVideo.bind(_this2));\n      } else {\n        requestAnimationFrame(_this2.verificarVideo.bind(_this2));\n      }\n    })();\n  }\n  // Si \"obtenerDatosQR\" encuentra un QR válido entonces se mostrarán los datos en pantalla\n  // y se devolverá true para detener el escaneo. En caso contrario, mientras no se detecte\n  // un QR, la función \"obtenerDatosQR\" devolverá false y el método \"verificarVideo\" se \n  // volverá a ejecutar nuevamente.\n  // Para analizar la imagen se usan los Elementos HTML: video y canvas. El TAG HTML \"video\"\n  // sirve para establecer un recuadro en la pantalla donde se visualiza el video de la \n  // cámara. Cada fotograma de la cámara es redibujado dentro del TAG HTML \"canvas\", \n  // de modo que es la imagen del canvas, la que analiza la biblioteca \"jsQR\". \n  obtenerDatosQR() {\n    const w = this.video.nativeElement.videoWidth;\n    const h = this.video.nativeElement.videoHeight;\n    this.canvas.nativeElement.width = w;\n    this.canvas.nativeElement.height = h;\n    const context = this.canvas.nativeElement.getContext('2d');\n    context.drawImage(this.video.nativeElement, 0, 0, w, h);\n    const img = context.getImageData(0, 0, w, h);\n    let qrCode = jsQR(img.data, w, h, {\n      inversionAttempts: 'dontInvert'\n    });\n    if (qrCode) {\n      if (qrCode.data !== '') {\n        this.escaneando = false;\n        this.mostrarDatosQROrdenados(qrCode.data);\n        return true;\n      }\n    }\n    return false;\n  }\n  mostrarDatosQROrdenados(datosQR) {\n    this.datosQR = datosQR;\n    const objetoDatosQR = JSON.parse(datosQR);\n    // ----------------------------------\n    // TAREA PARA COMPLETAR POR EL ALUMNO\n    // ----------------------------------\n    // 1) Ejecutar el setter de la clase Asistencia:\n    //     this.asistencia.setAsistencia(...parametros...)\n    //    de modo que los parámetros los tome del objeto datosQR,\n    //    por ejemplo: datosQR.nombreAsignatura contiene el valor \n    //    del nombre de la asignatura en la cual el alumno\n    //    debe quedar presente.\n    // 2) Hacer una interpolación entre las propiedades \n    //    de \"this.asistencia\" y la página HTML, de modo\n    //    que la página muestre de manera ordenada estos datos.\n  }\n  // Si la propiedad this.escaneando cambia a false, entonces la función\n  // \"verificarVideo\" deja de ejecutarse y se detiene el escaneo del QR.\n  detenerEscaneoQR() {\n    this.escaneando = false;\n  }\n}\n_class = HomePage;\n_class.ɵfac = function HomePage_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AlertController), i0.ɵɵdirectiveInject(i2.AnimationController));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-home\"]],\n  viewQuery: function HomePage_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5, ElementRef);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemTitulo = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.video = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas = _t.first);\n    }\n  },\n  decls: 29,\n  vars: 7,\n  consts: [[1, \"headercolor\"], [1, \"centratit\"], [\"slot\", \"start\"], [\"src\", \"assets/img/DuocUC.svg.png\", 1, \"imglogo\"], [1, \"ion-text-center\"], [1, \"background\", 3, \"fullscreen\"], [2, \"height\", \"100%\", \"display\", \"flex\", \"align-items\", \"center\", \"justify-content\", \"center\"], [1, \"colorcard1\", \"ion-text-center\", \"ion-padding-vertical\"], [1, \"azul\"], [\"class\", \"azul\", 4, \"ngIf\"], [\"class\", \"botonduoc ion-auto\", 3, \"click\", 4, \"ngIf\"], [\"width\", \"100%\", 3, \"hidden\"], [\"video\", \"\"], [\"hidden\", \"\"], [\"canvas\", \"\"], [1, \"borde\"], [4, \"ngIf\"], [1, \"botonduoc\", \"ion-auto\", 3, \"click\"], [\"slot\", \"start\", \"name\", \"videocam-outline\"], [\"slot\", \"start\", \"name\", \"stop-circle-outline\"]],\n  template: function HomePage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"div\", 1)(3, \"ion-buttons\", 2);\n      i0.ɵɵelement(4, \"ion-img\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ion-title\", 4);\n      i0.ɵɵtext(6, \" Asistencia Duoc \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(7, \"ion-content\", 5)(8, \"div\", 6)(9, \"ion-card\", 7)(10, \"ion-card-title\")(11, \"ion-label\", 4)(12, \"h1\", 8);\n      i0.ɵɵtext(13, \"\\u00A1Bienvenido!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, HomePage_p_14_Template, 2, 2, \"p\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"ion-card-content\");\n      i0.ɵɵtemplate(16, HomePage_ion_button_16_Template, 3, 0, \"ion-button\", 10);\n      i0.ɵɵtemplate(17, HomePage_ion_button_17_Template, 3, 0, \"ion-button\", 10);\n      i0.ɵɵelement(18, \"video\", 11, 12)(20, \"canvas\", 13, 14);\n      i0.ɵɵelementStart(22, \"ion-card\")(23, \"ion-card-header\")(24, \"ion-card-title\");\n      i0.ɵɵtext(25, \"Los datos del C\\u00F3digo QR son los siguientes:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"ion-card-content\", 15);\n      i0.ɵɵtemplate(27, HomePage_h2_27_Template, 2, 1, \"h2\", 16);\n      i0.ɵɵtemplate(28, HomePage_h2_28_Template, 2, 0, \"h2\", 16);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.usuario);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.escaneando);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.escaneando);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"hidden\", !ctx.escaneando);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.datosQR);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.datosQR);\n    }\n  },\n  dependencies: [i3.NgIf, i2.IonButton, i2.IonButtons, i2.IonCard, i2.IonCardContent, i2.IonCardHeader, i2.IonCardTitle, i2.IonContent, i2.IonHeader, i2.IonIcon, i2.IonImg, i2.IonLabel, i2.IonTitle, i2.IonToolbar],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { HomePage };","map":{"version":3,"names":["ElementRef","Usuario","Asistencia","jsQR","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","ctx_r0","usuario","nombre","apellido","ɵɵlistener","HomePage_ion_button_16_Template_ion_button_click_0_listener","ɵɵrestoreView","_r8","ctx_r7","ɵɵnextContext","ɵɵresetView","comenzarEscaneoQR","ɵɵelement","HomePage_ion_button_17_Template_ion_button_click_0_listener","_r10","ctx_r9","detenerEscaneoQR","ɵɵtextInterpolate1","ctx_r5","datosQR","HomePage","constructor","activeroute","router","alertController","animationController","asistencia","escaneando","queryParams","subscribe","params","nav","getCurrentNavigation","extras","state","navigate","animateItem","elementRef","create","addElement","iterations","duration","fromTo","play","ngOnInit","ngAfterViewInit","itemTitulo","animation","nativeElement","_this","_asyncToGenerator","mediaProvider","navigator","mediaDevices","getUserMedia","video","facingMode","srcObject","setAttribute","requestAnimationFrame","verificarVideo","bind","_this2","readyState","HAVE_ENOUGH_DATA","obtenerDatosQR","w","videoWidth","h","videoHeight","canvas","width","height","context","getContext","drawImage","img","getImageData","qrCode","data","inversionAttempts","mostrarDatosQROrdenados","objetoDatosQR","JSON","parse","ɵɵdirectiveInject","i1","ActivatedRoute","Router","i2","AlertController","AnimationController","selectors","viewQuery","HomePage_Query","rf","ctx","ɵɵtemplate","HomePage_p_14_Template","HomePage_ion_button_16_Template","HomePage_ion_button_17_Template","HomePage_h2_27_Template","HomePage_h2_28_Template","ɵɵproperty"],"sources":["/Users/krhisnaoyanedelyanez/Desktop/ProyectosIonic/AppDuoc/src/app/pages/home/home.page.ts","/Users/krhisnaoyanedelyanez/Desktop/ProyectosIonic/AppDuoc/src/app/pages/home/home.page.html"],"sourcesContent":["import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { AnimationController} from '@ionic/angular';\nimport { Usuario } from 'src/app/model/Usuario';\nimport { Asistencia } from 'src/app/model/asistencia';\nimport jsQR, { QRCode } from 'jsqr';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\nexport class HomePage implements OnInit, AfterViewInit {\n\n  @ViewChild('titulo', { read: ElementRef }) itemTitulo!: ElementRef;\n    @ViewChild('video')\n  private video!: ElementRef;\n\n  @ViewChild('canvas')\n  private canvas!: ElementRef;\n\n  public asistencia: Asistencia = new Asistencia();\n  public escaneando = false;\n  public datosQR: string = '';\n  public usuario: Usuario;\n  constructor(\n        private activeroute: ActivatedRoute // Permite obtener los parámetros de la página login\n      , private router: Router // Permite navegar entre páginas\n      , private alertController: AlertController // Permite mostrar mensajes emergentes más complejos que Toast\n      , private animationController: AnimationController) { // Permite crear animaciones con  \n\n    this.usuario = new Usuario('', '', '', '', '', '',);\n\n    // Se llama a la ruta activa y se obtienen sus parámetros mediante una subscripcion\n    this.activeroute.queryParams.subscribe(params => { \n\n      const nav = this.router.getCurrentNavigation();\n      if (nav) {\n        // Si tiene datos extra, se rescatan y se asignan a una propiedad\n        if (nav.extras.state) {\n          this.usuario = nav.extras.state['usuario'];\n          \n          return;\n        }\n      }\n      // Si no vienen datos extra desde la página anterior, quiere decir que el usuario\n      // intentó entrar directamente a la página home sin pasar por el login,\n      // de modo que el sistema debe enviarlo al login para que inicie sesión.\n      this.router.navigate(['/login']);\n\n    });\n  }\n  public animateItem(elementRef: any) {\n    this.animationController\n      .create()\n      .addElement(elementRef)\n      .iterations(1)\n      .duration(600)\n      .fromTo('transform', 'translate(100%)', 'translate(0%)')\n      .play();\n  }\n\n\n  public ngOnInit(): void {\n  }\n\n  public ngAfterViewInit(): void {\n    if (this.itemTitulo) {\n      const animation = this.animationController\n        .create()\n        .addElement(this.itemTitulo.nativeElement)\n        .iterations(1)\n        .duration(3000)\n        .fromTo('transform', 'translate(0%)', 'translate(45%)')\n        .fromTo('opacity', 0.2, 1);\n\n      animation.play();\n    }\n  }\n\n\n  // Se va a solicitar el uso de la cámara, por medio de \"navigator.mediaDevices.getUserMedia\".\n  // La cámara es necesaria para poder capturar el Código QR.\n  // Luego se cofigurará:\n  //     this.video.nativeElement.setAttribute('playsinline', 'true');\n  // que permite que el video se reproduzca dentro del contexto de la página, en lugar de\n  // cambiar automáticamente al modo de pantalla completa en dispositivos iOS. \n  // Esto sirve para proporcionar una experiencia de usuario más fluida y evitar \n  // interrupciones al reproducir videos en el sitio web. Luego se iniciará el proceso de\n  // escaneo indicándolo por medio de la variable \"this.escaneando = true;\" y se podrá detener \n  // el escaneo por medio del botón de \"Detener\" que cambia a \"this.escaneando = false;\" o bien\n  // si la cámara detecta un código QR.\n\n  public async comenzarEscaneoQR() {\n    const mediaProvider: MediaProvider = await navigator.mediaDevices.getUserMedia({\n      video: {facingMode: 'environment'}\n    });\n    this.video.nativeElement.srcObject = mediaProvider;\n    this.video.nativeElement.setAttribute('playsinline', 'true');\n    this.video.nativeElement.play();\n    this.escaneando = true;\n    requestAnimationFrame(this.verificarVideo.bind(this));\n  }\n\n  // Las imágenes de la cámara se analizan muchas veces, hasta que logre encontrar un Código QR,\n  // por esta razón se usa la función del navegador \"requestAnimationFrame\", que permite realizar\n  // actualizaciones de la interfaz de usuario de manera eficiente y sincronizada con los \n  // refrescos de la pantalla. Entonces, en cada refresco de pantalla el programa realizará una\n  // pequeña pausa para analizar si el fotograma capturado es o no un Código QR, por medio de\n  // la función this.obtenerDatosQR().\n\n  async verificarVideo() {\n    if (this.video.nativeElement.readyState === this.video.nativeElement.HAVE_ENOUGH_DATA) {\n      if (this.obtenerDatosQR() || !this.escaneando) return;\n      requestAnimationFrame(this.verificarVideo.bind(this));\n    } else {\n      requestAnimationFrame(this.verificarVideo.bind(this));\n    }\n  }\n\n  // Si \"obtenerDatosQR\" encuentra un QR válido entonces se mostrarán los datos en pantalla\n  // y se devolverá true para detener el escaneo. En caso contrario, mientras no se detecte\n  // un QR, la función \"obtenerDatosQR\" devolverá false y el método \"verificarVideo\" se \n  // volverá a ejecutar nuevamente.\n  // Para analizar la imagen se usan los Elementos HTML: video y canvas. El TAG HTML \"video\"\n  // sirve para establecer un recuadro en la pantalla donde se visualiza el video de la \n  // cámara. Cada fotograma de la cámara es redibujado dentro del TAG HTML \"canvas\", \n  // de modo que es la imagen del canvas, la que analiza la biblioteca \"jsQR\". \n\n  public obtenerDatosQR(): boolean {\n    const w: number = this.video.nativeElement.videoWidth;\n    const h: number = this.video.nativeElement.videoHeight;\n    this.canvas.nativeElement.width = w;\n    this.canvas.nativeElement.height = h;\n    const context: CanvasRenderingContext2D = this.canvas.nativeElement.getContext('2d');\n    context.drawImage(this.video.nativeElement, 0, 0, w, h);\n    const img: ImageData = context.getImageData(0, 0, w, h);\n    let qrCode: QRCode | null = jsQR(img.data, w, h, { inversionAttempts: 'dontInvert' });\n    if (qrCode) {\n      if (qrCode.data !== '') {\n        this.escaneando = false;\n        this.mostrarDatosQROrdenados(qrCode.data);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public mostrarDatosQROrdenados(datosQR: string): void {\n    this.datosQR = datosQR;\n    \n    const objetoDatosQR = JSON.parse(datosQR);\n\n\n    \n    // ----------------------------------\n    // TAREA PARA COMPLETAR POR EL ALUMNO\n    // ----------------------------------\n    // 1) Ejecutar el setter de la clase Asistencia:\n    //     this.asistencia.setAsistencia(...parametros...)\n    //    de modo que los parámetros los tome del objeto datosQR,\n    //    por ejemplo: datosQR.nombreAsignatura contiene el valor \n    //    del nombre de la asignatura en la cual el alumno\n    //    debe quedar presente.\n    // 2) Hacer una interpolación entre las propiedades \n    //    de \"this.asistencia\" y la página HTML, de modo\n    //    que la página muestre de manera ordenada estos datos.\n  }\n\n  // Si la propiedad this.escaneando cambia a false, entonces la función\n  // \"verificarVideo\" deja de ejecutarse y se detiene el escaneo del QR.\n\n  public detenerEscaneoQR(): void {\n    this.escaneando = false;\n  }\n\n}\n","<ion-header>\n  <ion-toolbar class=\"headercolor\">\n    <div class=\"centratit\">\n      <ion-buttons slot=\"start\">\n        <ion-img class=\"imglogo\" src=\"assets/img/DuocUC.svg.png\"></ion-img>\n      </ion-buttons>\n      <ion-title class=\"ion-text-center\">\n        Asistencia Duoc\n      </ion-title>\n    </div>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"background\" [fullscreen]=\"true\">\n  <div style=\"height: 100%; display: flex; align-items: center; justify-content:center;\">\n    <ion-card class=\"colorcard1 ion-text-center ion-padding-vertical\">\n      <ion-card-title>\n        <ion-label class=\"ion-text-center\">\n          <h1 class=\"azul\">¡Bienvenido!</h1>\n          <p class=\"azul\" *ngIf=\"usuario\">Usuario: {{ usuario.nombre }} {{usuario.apellido}}</p>\n        </ion-label>\n      </ion-card-title>\n\n      <ion-card-content>\n        <ion-button class=\"botonduoc ion-auto\" *ngIf=\"!escaneando\" (click)=\"comenzarEscaneoQR()\">\n          <ion-icon slot=\"start\" name=\"videocam-outline\"></ion-icon>\n          Comenzar Escaneo de QR\n        </ion-button>\n\n        <ion-button class=\"botonduoc ion-auto\" *ngIf=\"escaneando\" (click)=\"detenerEscaneoQR()\">\n          <ion-icon slot=\"start\" name=\"stop-circle-outline\"></ion-icon>\n          Detener escaneo de QR\n        </ion-button>\n\n        <video #video [hidden]=\"!escaneando\" width=\"100%\"></video>\n        <canvas #canvas hidden></canvas>\n\n        <ion-card >\n          <ion-card-header>\n            <ion-card-title>Los datos del Código QR son los siguientes:</ion-card-title>\n          </ion-card-header>\n          \n          <ion-card-content class=\"borde\">\n            <h2 *ngIf=\"datosQR\">\n              {{ datosQR }}\n            </h2>\n            <h2 *ngIf=\"!datosQR\">\n              Sin información\n            </h2>\n          </ion-card-content>\n\n        </ion-card>\n      </ion-card-content>\n    </ion-card>\n  </div>\n</ion-content>\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}